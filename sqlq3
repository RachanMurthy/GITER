CREATE DATABASE R22EK013;
use R22EK013;
SET SQL_SAFE_UPDATES = 0;


CREATE TABLE Student (
    snum INT PRIMARY KEY,
    sname VARCHAR(100),
    major VARCHAR(50),
    degree VARCHAR(50),
    age INT
);

CREATE TABLE Faculty (
    fid INT PRIMARY KEY,
    fname VARCHAR(100),
    deptid INT
);

CREATE TABLE Class (
    cname VARCHAR(100) PRIMARY KEY,
    meets_at VARCHAR(50),
    room VARCHAR(50),
    fid INT,
    FOREIGN KEY (fid) REFERENCES Faculty(fid)
);

CREATE TABLE Enrolled (
    snum INT,
    cname VARCHAR(100),
    PRIMARY KEY (snum, cname),
    FOREIGN KEY (snum) REFERENCES Student(snum),
    FOREIGN KEY (cname) REFERENCES Class(cname)
);

INSERT INTO Student (snum, sname, major, degree, age) VALUES
(1, 'John Doe', 'Computer Science', 'SR', 22),
(2, 'Jane Smith', 'History', 'JR', 20),
(3, 'Mike Brown', 'Mathematics', 'JR', 21),
(4, 'Lisa White', 'History', 'SR', 23),
(5, 'Mark Black', 'Computer Science', 'FR', 18);

INSERT INTO Faculty (fid, fname, deptid) VALUES
(1, 'I. Teacher', 101),
(2, 'A. Professor', 102),
(3, 'C. Lecturer', 103),
(4, 'D. Scholar', 104),
(5, 'E. Tutor', 105);

INSERT INTO Class (cname, meets_at, room, fid) VALUES
('Algebra', '10:00', 'R128', 3),
('History of Art', '12:00', 'R256', 2),
('Introduction to Programming', '10:00', 'R128', 1),
('Advanced Programming', '14:00', 'R254', 1),
('Calculus', '16:00', 'R128', 3);

INSERT INTO Enrolled (snum, cname) VALUES
(1, 'Algebra'),
(2, 'History of Art'),
(3, 'Introduction to Programming'),
(4, 'Advanced Programming'),
(1, 'Calculus'),
(2, 'Introduction to Programming'),
(3, 'Advanced Programming'),
(5, 'Algebra'),
(5, 'Calculus'),
(4, 'Calculus');

 
SELECT DISTINCT s.sname
FROM Student s
JOIN Enrolled e ON s.snum = e.snum
JOIN Class c ON e.cname = c.cname
JOIN Faculty f ON c.fid = f.fid
WHERE s.degree = 'JR' AND f.fname = 'I. Teacher';


SELECT MAX(s.age) AS oldest_age
FROM Student s
LEFT JOIN Enrolled e ON s.snum = e.snum
LEFT JOIN Class c ON e.cname = c.cname
LEFT JOIN Faculty f ON c.fid = f.fid
WHERE s.major = 'History' OR f.fname = 'I. Teacher';


SELECT Distinct c.cname
From Class c
JOIN Enrolled e ON c.cname = e.cname
JOIN Student s ON e.snum = s.snum
Where c.room = "R128";




SELECT s.sname
FROM Student s
JOIN Enrolled e ON s.snum = e.snum
JOIN Class c1 ON e.cname = c1.cname
JOIN Class c2 ON c1.meets_at = c2.meets_at AND c1.cname <> c2.cname
JOIN Enrolled e2 ON s.snum = e2.snum AND c2.cname = e2.cname
GROUP BY s.sname
HAVING COUNT(DISTINCT c1.cname) > 1;

SELECT f.fname
FROM Faculty f
WHERE NOT EXISTS (
    SELECT room FROM Class c2 GROUP BY c2.room
    EXCEPT
    SELECT c.room FROM Class c WHERE c.fid = f.fid GROUP BY c.room
);

SELECT f.fname
FROM Faculty f
JOIN Class c ON f.fid = c.fid
LEFT JOIN Enrolled e ON c.cname = e.cname
GROUP BY f.fname
HAVING COUNT(e.snum) < 5;


SELECT degree AS Level, AVG(age) AS AverageAge
FROM Student
GROUP BY degree;


SELECT degree AS Level, AVG(age) AS AverageAge
FROM Student
WHERE degree != 'JR'
GROUP BY degree;


SELECT s.sname
FROM Student s
JOIN Enrolled e ON s.snum = e.snum
GROUP BY s.snum
HAVING COUNT(e.cname) = (
    SELECT MAX(ClassCount) FROM (
        SELECT COUNT(e.cname) AS ClassCount
        FROM Enrolled e
        GROUP BY e.snum
    ) AS ClassCounts
);

SELECT s.sname
FROM Student s
LEFT JOIN Enrolled e ON s.snum = e.snum
WHERE e.snum IS NULL;






